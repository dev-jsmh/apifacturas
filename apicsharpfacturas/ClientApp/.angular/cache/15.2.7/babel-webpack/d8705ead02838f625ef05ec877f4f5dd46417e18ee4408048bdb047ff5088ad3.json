{"ast":null,"code":"import { ClientEntity } from 'src/app/models/ClientEntity';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/client.service\";\nimport * as i3 from \"src/app/services/product.service\";\nimport * as i4 from \"@angular/common\";\nfunction ClientAddProductComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 9)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const product_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(product_r1.name);\n  }\n}\nexport class ClientAddProductComponent {\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(route, clientService, productService) {\n    this.route = route;\n    this.clientService = clientService;\n    this.productService = productService;\n    this.clientId = '';\n    this.currentClient = new ClientEntity();\n    // list of products \n    this.productList = [];\n    // extract id from route\n    this.route.params.subscribe({\n      next: params => {\n        this.clientId = params['id'];\n      },\n      error: ex => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n    // make request to back-end for client\n    this.clientService.getById(this.clientId).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ex => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n    // make request for product list \n    this.productService.getAll().subscribe({\n      next: res => {\n        this.productList = res;\n        console.log(\"List of products: \");\n        console.log(this.productList);\n      },\n      error: ex => {\n        console.log(\"Error when trying to get products from back-end api\");\n        console.log(ex);\n      }\n    });\n  }\n}\nClientAddProductComponent.ɵfac = function ClientAddProductComponent_Factory(t) {\n  return new (t || ClientAddProductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ClientService), i0.ɵɵdirectiveInject(i3.ProductService));\n};\nClientAddProductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientAddProductComponent,\n  selectors: [[\"app-client-add-product\"]],\n  decls: 36,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [\"routerLink\", \"../details\"], [1, \"container\", \"mt-5\"], [1, \"mb-3\"], [2, \"font-weight\", \"bold\"], [1, \"mt-5\"], [1, \"table\", \"table-stripe\", \"table-dark\"], [\"scope\", \"col\"], [\"scope\", \"row\", 4, \"ngFor\", \"ngForOf\"], [\"scope\", \"row\"]],\n  template: function ClientAddProductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \" volver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Agregar productos al cliente \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"p\")(8, \"span\", 4);\n      i0.ɵɵtext(9, \"Id: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\")(12, \"span\", 4);\n      i0.ɵɵtext(13, \"Nombres:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"p\")(16, \"span\", 4);\n      i0.ɵɵtext(17, \"Apellidos:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"h4\", 5);\n      i0.ɵɵtext(20, \"Productos Disponibles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"table\", 6)(22, \"thead\")(23, \"tr\")(24, \"th\", 7);\n      i0.ɵɵtext(25, \"Id\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"th\", 7);\n      i0.ɵɵtext(27, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"th\", 7);\n      i0.ɵɵtext(29, \"Modelo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"th\", 7);\n      i0.ɵɵtext(31, \"precio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"th\", 7);\n      i0.ɵɵtext(33, \"Acciones\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(34, \"tbody\");\n      i0.ɵɵtemplate(35, ClientAddProductComponent_tr_35_Template, 7, 3, \"tr\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate(ctx.currentClient.id);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.currentClient.names, \"\");\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\" \", ctx.currentClient.lastnames, \"\");\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngForOf\", ctx.productList);\n    }\n  },\n  dependencies: [i4.NgForOf, i1.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["ClientEntity","i0","ClientAddProductComponent","constructor","route","clientService","productService","params","subscribe","next","clientId","error","ex","console","log","getById","res","currentClient","getAll","productList","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/clients/client-add-product/client-add-product.component.ts","/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/clients/client-add-product/client-add-product.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nimport { ClientService } from 'src/app/services/client.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-client-add-product',\n  templateUrl: './client-add-product.component.html',\n  styleUrls: ['./client-add-product.component.css']\n})\nexport class ClientAddProductComponent {\n\n\n\n  public clientId = '';\n  public currentClient: ClientEntity = new ClientEntity();\n// list of products \n  public productList: ProductEntity[] = [];\n\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(\n    private route: ActivatedRoute,\n    private clientService: ClientService,\n    private productService: ProductService\n  ) {\n\n    // extract id from route\n    this.route.params.subscribe({\n      next: (params) => {\n        this.clientId = params['id'];\n      },\n      error: (ex) => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n\n    // make request to back-end for client\n    this.clientService.getById(this.clientId).subscribe({\n      next: (res: any) => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ( ex  ) => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n\n    // make request for product list \nthis.productService.getAll().subscribe({\n  next: ( res: any ) => {\n    this.productList = res;\n    console.log(\"List of products: \");\n    console.log(this.productList);\n  },\n  error: ( ex ) => {\n    console.log(\"Error when trying to get products from back-end api\");\n    console.log( ex );\n  }\n});\n\n\n  }\n\n\n}\n","\n<div class=\"container-fluid\">\n    <a routerLink=\"../details\"> volver</a>\n    <h3>Agregar productos al cliente </h3>\n</div>\n\n<div class=\"container mt-5\">\n    <div class=\"mb-3\">\n        <p><span style=\"font-weight: bold;\">Id: </span>{{ currentClient.id }}</p>\n        <p><span style=\"font-weight: bold;\">Nombres:</span> {{ currentClient.names }}</p>\n        <p><span style=\"font-weight: bold;\">Apellidos:</span> {{ currentClient.lastnames }}</p>\n    </div>\n\n<h4 class=\"mt-5\">Productos Disponibles</h4>\n\n<table class=\"table table-stripe table-dark\" >\n    <thead>\n        <tr>\n            <th scope=\"col\">Id</th>\n            <th scope=\"col\">Nombre</th>\n            <th scope=\"col\">Modelo</th>\n            <th scope=\"col\">precio</th>\n            <th scope=\"col\">Acciones</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let product of productList\" scope=\"row\">\n            <td>{{ product.name }}</td> \n            <td>{{ product.name }}</td> \n            <td>{{ product.name }}</td> \n\n            \n        </tr>\n    </tbody>\n</table>\n\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}