{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nlet ClientUpdateComponent = class ClientUpdateComponent {\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(route, clientService, router, fb) {\n    this.route = route;\n    this.clientService = clientService;\n    this.router = router;\n    this.fb = fb;\n    // id of client\n    this.clientId = '';\n    // instance for the client\n    this.currentClient = new ClientEntity();\n    // extract id from route\n    this.route.params.subscribe({\n      next: params => {\n        this.clientId = params['id'];\n      },\n      error: ex => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n    // make request to back-end\n    this.clientService.getById(this.clientId).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"Detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ex => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n    // =============== form ===============\n    this.updateClientForm = this.fb.group({\n      \"name\": [this.currentClient.names, Validators.required],\n      \"lastname\": [this.currentClient.lastnames, Validators.required]\n    });\n  }\n  // method to handle form \n  onSubmit() {}\n};\nClientUpdateComponent = __decorate([Component({\n  selector: 'app-client-update',\n  templateUrl: './client-update.component.html',\n  styleUrls: ['./client-update.component.css']\n})], ClientUpdateComponent);\nexport { ClientUpdateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,YAAY,QAAQ,6BAA6B;AAQnD,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAShC;EACA;EACAC,YACUC,KAAqB,EACrBC,aAA4B,EAC5BC,MAAc,EACdC,EAAe;IAHf,UAAK,GAALH,KAAK;IACL,kBAAa,GAAbC,aAAa;IACb,WAAM,GAANC,MAAM;IACN,OAAE,GAAFC,EAAE;IAbZ;IACO,aAAQ,GAAG,EAAE;IACpB;IACO,kBAAa,GAAiB,IAAIN,YAAY,EAAE;IAarD;IACA,IAAI,CAACG,KAAK,CAACI,MAAM,CAACC,SAAS,CAAC;MAC1BC,IAAI,EAAGF,MAAM,IAAI;QACf,IAAI,CAACG,QAAQ,GAAGH,MAAM,CAAC,IAAI,CAAC;MAC9B,CAAC;MACDI,KAAK,EAAGC,EAAE,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;QAC5ED,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;KACD,CAAC;IAEF;IACA,IAAI,CAACR,aAAa,CAACW,OAAO,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACF,SAAS,CAAC;MAClDC,IAAI,EAAGO,GAAQ,IAAI;QACjB;QACA,IAAI,CAACC,aAAa,GAAGD,GAAG;QACxBH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,aAAa,CAAC;MACjC,CAAC;MACDN,KAAK,EAAGC,EAAE,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;QAC9DD,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;KACD,CAAC;IAEF;IACA,IAAI,CAACM,gBAAgB,GAAG,IAAI,CAACZ,EAAE,CAACa,KAAK,CAAC;MACpC,MAAM,EAAE,CAAC,IAAI,CAACF,aAAa,CAACG,KAAK,EAAErB,UAAU,CAACsB,QAAQ,CAAC;MACvD,UAAU,EAAE,CAAC,IAAI,CAACJ,aAAa,CAACK,SAAS,EAAEvB,UAAU,CAACsB,QAAQ;KAC/D,CAAC;EACJ;EAEF;EAEAE,QAAQ,IAER;CACC;AAvDYtB,qBAAqB,eALjCH,SAAS,CAAC;EACT0B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACWzB,qBAAqB,CAuDjC;SAvDYA,qBAAqB","names":["Component","Validators","ClientEntity","ClientUpdateComponent","constructor","route","clientService","router","fb","params","subscribe","next","clientId","error","ex","console","log","getById","res","currentClient","updateClientForm","group","names","required","lastnames","onSubmit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/clients/client-update/client-update.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nimport { ClientService } from 'src/app/services/client.service';\n\n@Component({\n  selector: 'app-client-update',\n  templateUrl: './client-update.component.html',\n  styleUrls: ['./client-update.component.css']\n})\nexport class ClientUpdateComponent {\n\n  // id of client\n  public clientId = '';\n  // instance for the client\n  public currentClient: ClientEntity = new ClientEntity();\n  // form \n  public updateClientForm: FormGroup;\n\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(\n    private route: ActivatedRoute,\n    private clientService: ClientService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n\n    // extract id from route\n    this.route.params.subscribe({\n      next: (params) => {\n        this.clientId = params['id'];\n      },\n      error: (ex) => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n\n    // make request to back-end\n    this.clientService.getById(this.clientId).subscribe({\n      next: (res: any) => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"Detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: (ex) => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n\n    // =============== form ===============\n    this.updateClientForm = this.fb.group({\n      \"name\": [this.currentClient.names, Validators.required],\n      \"lastname\": [this.currentClient.lastnames, Validators.required],\n    });\n  }\n\n// method to handle form \n\nonSubmit(){\n  \n}\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}