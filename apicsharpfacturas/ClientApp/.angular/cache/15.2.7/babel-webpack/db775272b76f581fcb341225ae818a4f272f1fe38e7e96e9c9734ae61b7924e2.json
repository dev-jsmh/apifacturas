{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction ProductUpdateComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" El nombre es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductUpdateComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" El modelo es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductUpdateComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" El precio es obligatorio \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ProductUpdateComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \" La cantidad es obligatoria \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ProductUpdateComponent {\n  // inject dependencies \n  constructor(fb, route) {\n    // extract the product id from route\n    this.fb = fb;\n    this.route = route;\n    // product id form route\n    this.productId = '';\n    // current product\n    this.currentProduct = new ProductEntity();\n    this.\n    // create form with client data \n    this.updateProductForm = this.fb.group({\n      \"name\": ['', Validators.required],\n      \"model\": ['', Validators.required],\n      \"price\": [0.00, Validators.required],\n      \"stock\": [0, Validators.required]\n    });\n  }\n  // method to handle form \n  onSubmit() {\n    console.log(this.updateProductForm.value);\n  }\n}\nProductUpdateComponent.ɵfac = function ProductUpdateComponent_Factory(t) {\n  return new (t || ProductUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\nProductUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ProductUpdateComponent,\n  selectors: [[\"app-product-update\"]],\n  decls: 31,\n  vars: 6,\n  consts: [[1, \"container-fluid\"], [\"routerLink\", \"../details\"], [1, \"container\"], [1, \"col-md-6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"model\", 1, \"form-control\"], [\"type\", \"number\", \"formControlName\", \"price\", 1, \"form-control\"], [\"type\", \"number\", \"formControlName\", \"stock\", 1, \"form-control\"], [\"routerLink\", \"../\", 1, \"btn\", \"btn-primary\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\"], [1, \"text-danger\"]],\n  template: function ProductUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \"<-\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"h3\");\n      i0.ɵɵtext(5, \"Actualizar Datos Producto\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ProductUpdateComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\");\n      i0.ɵɵtext(9, \"Nombre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 5);\n      i0.ɵɵtemplate(11, ProductUpdateComponent_div_11_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 4)(13, \"label\");\n      i0.ɵɵtext(14, \"Modelo\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 7);\n      i0.ɵɵtemplate(16, ProductUpdateComponent_div_16_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\");\n      i0.ɵɵtext(19, \"Precio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 8);\n      i0.ɵɵtemplate(21, ProductUpdateComponent_div_21_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\");\n      i0.ɵɵtext(24, \"Stock\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 9);\n      i0.ɵɵtemplate(26, ProductUpdateComponent_div_26_Template, 2, 0, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"a\", 10);\n      i0.ɵɵtext(28, \"cancelar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"button\", 11);\n      i0.ɵɵtext(30, \"guardar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.updateProductForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.updateProductForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.updateProductForm.get(\"model\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.updateProductForm.get(\"model\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.updateProductForm.get(\"price\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.updateProductForm.get(\"stock\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.updateProductForm.get(\"stock\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !ctx.updateProductForm.valid);\n    }\n  },\n  dependencies: [i3.NgIf, i2.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,aAAa,QAAQ,8BAA8B;;;;;;;ICchDC,+BAAkH;IAC9GA,0CACJ;IAAAA,iBAAM;;;;;IAKNA,+BAAqH;IACjHA,0CACJ;IAAAA,iBAAM;;;;;IAKNA,+BAAqH;IACjHA,0CACA;IAAAA,iBAAM;;;;;IAKVA,+BAAoH;IACpHA,4CACA;IAAAA,iBAAM;;;AD9BlB,OAAM,MAAOC,sBAAsB;EAUjC;EACAC,YAAoBC,EAAe,EAAUC,KAAqB;IAEpE;IAFsB,OAAE,GAAFD,EAAE;IAAuB,UAAK,GAALC,KAAK;IANlD;IACO,cAAS,GAAG,EAAE;IACvB;IACO,mBAAc,GAAkB,IAAIL,aAAa,EAAE;IAO1D,IAAI;IAIA;IACAM,IAAI,CAACC,iBAAiB,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CACpC;MACE,MAAM,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACjC,OAAO,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACU,QAAQ,CAAC;MAClC,OAAO,EAAE,CAAC,IAAI,EAAEV,UAAU,CAACU,QAAQ,CAAC;MACpC,OAAO,EAAE,CAAC,CAAC,EAAEV,UAAU,CAACU,QAAQ;KACjC,CACF;EACH;EAEA;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,iBAAiB,CAACM,KAAK,CAAC;EAE3C;;AAnCWX,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRnCjB,8BAA6B;MAEEA,kBAAE;MAAAA,iBAAI;MAIrCA,8BAAuB;MAEfA,yCAAyB;MAAAA,iBAAK;MAElCA,+BAA+E;MAAzCA;QAAA,OAAYkB,cAAU;MAAA,EAAC;MAEzDlB,8BAAkB;MACPA,sBAAM;MAAAA,iBAAQ;MACrBA,4BAA+D;MAC/DA,yEAEM;MACVA,iBAAM;MACNA,+BAAkB;MACPA,uBAAM;MAAAA,iBAAQ;MACrBA,4BAAiE;MACjEA,yEAEM;MACVA,iBAAM;MACNA,+BAAkB;MACPA,uBAAM;MAAAA,iBAAQ;MACrBA,4BAAmE;MACnEA,yEAEU;MACdA,iBAAM;MACNA,+BAAkB;MACPA,sBAAK;MAAAA,iBAAQ;MACpBA,4BAAkE;MAClEA,yEAEM;MACVA,iBAAM;MAENA,8BAA4C;MAAAA,yBAAQ;MAAAA,iBAAI;MACxDA,mCAAuF;MAAAA,wBAAO;MAAAA,iBAAS;;;;;;;MAhCrGA,eAA+B;MAA/BA,iDAA+B;MAKvBA,eAAsF;MAAtFA,2LAAsF;MAOtFA,eAAwF;MAAxFA,6LAAwF;MAOxFA,eAAyF;MAAzFA,6LAAyF;MAOzFA,eAAwF;MAAxFA,6LAAwF;MAMlDA,eAAqC;MAArCA,uDAAqC","names":["Validators","ProductEntity","i0","ProductUpdateComponent","constructor","fb","route","this","updateProductForm","group","required","onSubmit","console","log","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/products/product-update/product-update.component.ts","/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/products/product-update/product-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Navigation, Route, Router } from '@angular/router';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent {\n\n\n  updateProductForm: FormGroup;\n\n  // product id form route\n  public productId = '';\n// current product\npublic currentProduct: ProductEntity = new ProductEntity();\n\n  // inject dependencies \n  constructor(private fb: FormBuilder, private route: ActivatedRoute) {\n\n// extract the product id from route\n\nthis.\n\n\n\n    // create form with client data \n    this.updateProductForm = this.fb.group(\n      {\n        \"name\": ['', Validators.required],\n        \"model\": ['', Validators.required],\n        \"price\": [0.00, Validators.required],\n        \"stock\": [0, Validators.required]\n      }\n    );\n  }\n\n  // method to handle form \n\n  onSubmit() {\n    console.log(this.updateProductForm.value);\n\n  }\n\n}\n","\n\n<div class=\"container-fluid\">\n\n    <a routerLink=\"../details\"><-</a>\n</div>\n\n\n<div class=\"container\">\n\n    <h3>Actualizar Datos Producto</h3>\n\n    <form [formGroup]=\"updateProductForm\" (ngSubmit)=\"onSubmit()\" class=\"col-md-6\">\n      \n        <div class=\"mb-3\">\n            <label>Nombre</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"name\">\n            <div *ngIf=\"updateProductForm.get('name')?.invalid && updateProductForm.get('name')?.touched\" class=\"text-danger\">\n                El nombre es obligatorio\n            </div>\n        </div>\n        <div class=\"mb-3\">\n            <label>Modelo</label>\n            <input class=\"form-control\" type=\"text\" formControlName=\"model\" >\n            <div *ngIf=\"updateProductForm.get('model')?.invalid && updateProductForm.get('model')?.touched \" class=\"text-danger\">\n                El modelo es obligatorio\n            </div>\n        </div> \n        <div class=\"mb-3\">\n            <label>Precio</label>\n            <input class=\"form-control\" type=\"number\" formControlName=\"price\" >\n            <div *ngIf=\"updateProductForm.get('price')?.invalid &&  updateProductForm.get('price')?.touched\" class=\"text-danger\">\n                El precio es obligatorio\n                </div>\n        </div>\n        <div class=\"mb-3\">\n            <label>Stock</label>\n            <input class=\"form-control\" type=\"number\" formControlName=\"stock\">\n            <div *ngIf=\"updateProductForm.get('stock')?.invalid && updateProductForm.get('stock')?.touched\" class=\"text-danger\">\n            La cantidad es obligatoria\n            </div>\n        </div>\n        \n        <a class=\"btn btn-primary\" routerLink=\"../\">cancelar</a>\n        <button class=\"btn btn-secondary\" type=\"submit\" [disabled]=\"!updateProductForm.valid\" >guardar</button>\n        </form>\n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}