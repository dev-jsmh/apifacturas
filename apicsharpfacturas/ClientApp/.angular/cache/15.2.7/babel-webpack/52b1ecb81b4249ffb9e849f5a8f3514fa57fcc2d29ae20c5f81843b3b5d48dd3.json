{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nlet ProductCreateComponent = class ProductCreateComponent {\n  constructor(fb, productService) {\n    // create the form\n    this.fb = fb;\n    this.productService = productService;\n    this.newProduct = new ProductEntity();\n    this.createProductForm = this.fb.group({\n      \"name\": ['', Validators.required],\n      \"model\": ['', Validators.required],\n      \"price\": ['', Validators.required],\n      \"stock\": ['', Validators.required]\n    });\n  }\n  validateForm() {}\n  // method to handle the form data \n  onSubmit() {\n    console.log(this.createProductForm.value);\n    this.newProduct.id = 0;\n    this.newProduct.name = this.createProductForm.get(\"name\")?.value;\n    this.newProduct.model = this.createProductForm.get(\"model\")?.value;\n    this.newProduct.price = this.createProductForm.get(\"price\")?.value;\n    this.newProduct.stock = this.createProductForm.get(\"stock\")?.value;\n    // call the service \n    this.productService.create(this.newProduct).subscribe({\n      next: res => {\n        console.log(\"El producto se envio al backend \");\n        console.log(res);\n      },\n      error: error => {\n        console.log(\"Error al intentar guardar el producto en el backend\");\n        console.log(error);\n      }\n    });\n  }\n};\nProductCreateComponent = __decorate([Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})], ProductCreateComponent);\nexport { ProductCreateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,aAAa,QAAQ,8BAA8B;AASrD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAKjCC,YAAoBC,EAAe,EAASC,cAA8B;IAExE;IAFkB,OAAE,GAAFD,EAAE;IAAsB,mBAAc,GAAdC,cAAc;IAF1D,eAAU,GAAkB,IAAIJ,aAAa,EAAE;IAM7C,IAAI,CAACK,iBAAiB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CACpC;MACE,MAAM,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACjC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACQ,QAAQ,CAAC;MAClC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACQ,QAAQ,CAAC;MAClC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACQ,QAAQ;KAClC,CACF;EACH;EAGFC,YAAY,IAEZ;EAGE;EACAC,QAAQ;IAENC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,iBAAiB,CAACO,KAAK,CAAC;IAEzC,IAAI,CAACC,UAAU,CAACC,EAAE,GAAG,CAAC;IACtB,IAAI,CAACD,UAAU,CAACE,IAAI,GAAG,IAAI,CAACV,iBAAiB,CAACW,GAAG,CAAC,MAAM,CAAC,EAAEJ,KAAK;IAChE,IAAI,CAACC,UAAU,CAACI,KAAK,GAAG,IAAI,CAACZ,iBAAiB,CAACW,GAAG,CAAC,OAAO,CAAC,EAAEJ,KAAK;IAClE,IAAI,CAACC,UAAU,CAACK,KAAK,GAAG,IAAI,CAACb,iBAAiB,CAACW,GAAG,CAAC,OAAO,CAAC,EAAEJ,KAAK;IAClE,IAAI,CAACC,UAAU,CAACM,KAAK,GAAG,IAAI,CAACd,iBAAiB,CAACW,GAAG,CAAC,OAAO,CAAC,EAAEJ,KAAK;IAGlE;IACA,IAAI,CAACR,cAAc,CAACgB,MAAM,CAAC,IAAI,CAACP,UAAU,CAAC,CAACQ,SAAS,CAAC;MACpDC,IAAI,EAAGC,GAAG,IAAI;QACZb,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CD,OAAO,CAACC,GAAG,CAACY,GAAG,CAAC;MAClB,CAAC;MAEDC,KAAK,EAAGA,KAAK,IAAI;QACfd,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;QAClED,OAAO,CAACC,GAAG,CAACa,KAAK,CAAC;MACpB;KAED,CAAC;EAGJ;CAGD;AAvDYvB,sBAAsB,eALlCH,SAAS,CAAC;EACT2B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW1B,sBAAsB,CAuDlC;SAvDYA,sBAAsB","names":["Component","Validators","ProductEntity","ProductCreateComponent","constructor","fb","productService","createProductForm","group","required","validateForm","onSubmit","console","log","value","newProduct","id","name","get","model","price","stock","create","subscribe","next","res","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/products/product-create/product-create.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nimport { ProductService } from 'src/app/services/product.service';\n\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent {\n\n  createProductForm: FormGroup;\n  newProduct: ProductEntity = new ProductEntity();\n\n  constructor(private fb: FormBuilder, public productService: ProductService) {\n\n    // create the form\n\n    this.createProductForm = this.fb.group(\n      {\n        \"name\": ['', Validators.required],\n        \"model\": ['', Validators.required],\n        \"price\": ['', Validators.required],\n        \"stock\": ['', Validators.required]\n      }\n    );\n  }\n\n\nvalidateForm(){\n\n}\n\n\n  // method to handle the form data \n  onSubmit() {\n\n    console.log(this.createProductForm.value);\n\n    this.newProduct.id = 0;\n    this.newProduct.name = this.createProductForm.get(\"name\")?.value;\n    this.newProduct.model = this.createProductForm.get(\"model\")?.value;\n    this.newProduct.price = this.createProductForm.get(\"price\")?.value;\n    this.newProduct.stock = this.createProductForm.get(\"stock\")?.value;\n\n\n    // call the service \n    this.productService.create(this.newProduct).subscribe({\n      next: (res) => {\n        console.log(\"El producto se envio al backend \");\n        console.log(res);\n      },\n\n      error: (error) => {\n        console.log(\"Error al intentar guardar el producto en el backend\");\n        console.log(error);\n      }\n\n    })\n\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}