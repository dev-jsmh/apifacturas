{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nlet ProductCreateComponent = class ProductCreateComponent {\n  // inject dependencies inside the constructor\n  constructor(fb, productService, router) {\n    this.fb = fb;\n    this.productService = productService;\n    this.router = router;\n    // instantiate a new product\n    this.newProduct = new ProductEntity();\n    // create the form\n    this.createProductForm = this.fb.group({\n      \"name\": ['', Validators.required],\n      \"model\": ['', Validators.required],\n      \"price\": ['', Validators.required],\n      \"stock\": ['', Validators.required]\n    });\n  }\n  validateForm() {}\n  // method to handle the form data \n  onSubmit() {\n    this.newProduct.name = this.createProductForm.get(\"name\")?.value;\n    this.newProduct.model = this.createProductForm.get(\"model\")?.value;\n    this.newProduct.price = this.createProductForm.get(\"price\")?.value;\n    this.newProduct.stock = this.createProductForm.get(\"stock\")?.value;\n    console.log(\"product data: \" + this.newProduct);\n    console.log(\"sending product to back-end.......\");\n    console.log(this.newProduct);\n    // call the service \n    this.productService.create(this.newProduct).subscribe({\n      next: res => {\n        console.log(\"El producto se envio al backend \");\n        console.log(res);\n      },\n      error: error => {\n        console.log(\"Error al intentar guardar el producto en el backend\");\n        console.log(error);\n      }\n    });\n  }\n};\nProductCreateComponent = __decorate([Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})], ProductCreateComponent);\nexport { ProductCreateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,aAAa,QAAQ,8BAA8B;AASrD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAKnC;EACEC,YACUC,EAAe,EACfC,cAA8B,EAC9BC,MAAa;IAFb,OAAE,GAAFF,EAAE;IACF,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IANhB;IACA,eAAU,GAAkB,IAAIL,aAAa,EAAE;IAQ7C;IACA,IAAI,CAACM,iBAAiB,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CACpC;MACE,MAAM,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACjC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACS,QAAQ,CAAC;MAClC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACS,QAAQ,CAAC;MAClC,OAAO,EAAE,CAAC,EAAE,EAAET,UAAU,CAACS,QAAQ;KAClC,CACF;EACH;EAGFC,YAAY,IAEZ;EAGE;EACAC,QAAQ;IAEN,IAAI,CAACC,UAAU,CAACC,IAAI,GAAG,IAAI,CAACN,iBAAiB,CAACO,GAAG,CAAC,MAAM,CAAC,EAAEC,KAAK;IAChE,IAAI,CAACH,UAAU,CAACI,KAAK,GAAG,IAAI,CAACT,iBAAiB,CAACO,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAClE,IAAI,CAACH,UAAU,CAACK,KAAK,GAAG,IAAI,CAACV,iBAAiB,CAACO,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAClE,IAAI,CAACH,UAAU,CAACM,KAAK,GAAG,IAAI,CAACX,iBAAiB,CAACO,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAElEI,OAAO,CAACC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAACR,UAAU,CAAC;IAC/CO,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;IACjDD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,UAAU,CAAC;IAG5B;IACA,IAAI,CAACP,cAAc,CAACgB,MAAM,CAAC,IAAI,CAACT,UAAU,CAAC,CAACU,SAAS,CAAC;MACpDC,IAAI,EAAGC,GAAG,IAAI;QACZL,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;QAC/CD,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC;MAClB,CAAC;MAEDC,KAAK,EAAGA,KAAK,IAAI;QACfN,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;QAClED,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACpB;KAED,CAAC;EAGJ;CAGD;AA5DYvB,sBAAsB,eALlCH,SAAS,CAAC;EACT2B,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW1B,sBAAsB,CA4DlC;SA5DYA,sBAAsB","names":["Component","Validators","ProductEntity","ProductCreateComponent","constructor","fb","productService","router","createProductForm","group","required","validateForm","onSubmit","newProduct","name","get","value","model","price","stock","console","log","create","subscribe","next","res","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/products/product-create/product-create.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nimport { ProductService } from 'src/app/services/product.service';\n\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent {\n\n  createProductForm: FormGroup;\n  // instantiate a new product\n  newProduct: ProductEntity = new ProductEntity();\n// inject dependencies inside the constructor\n  constructor(\n    private fb: FormBuilder,\n     public productService: ProductService,\n     public router: Route\n    ) {\n\n    // create the form\n    this.createProductForm = this.fb.group(\n      {\n        \"name\": ['', Validators.required],\n        \"model\": ['', Validators.required],\n        \"price\": ['', Validators.required],\n        \"stock\": ['', Validators.required]\n      }\n    );\n  }\n\n\nvalidateForm(){\n\n}\n\n\n  // method to handle the form data \n  onSubmit() {\n\n    this.newProduct.name = this.createProductForm.get(\"name\")?.value;\n    this.newProduct.model = this.createProductForm.get(\"model\")?.value;\n    this.newProduct.price = this.createProductForm.get(\"price\")?.value;\n    this.newProduct.stock = this.createProductForm.get(\"stock\")?.value;\n\n    console.log(\"product data: \" + this.newProduct);\n    console.log(\"sending product to back-end.......\");\n    console.log(this.newProduct);\n\n\n    // call the service \n    this.productService.create(this.newProduct).subscribe({\n      next: (res) => {\n        console.log(\"El producto se envio al backend \");\n        console.log(res);\n      },\n\n      error: (error) => {\n        console.log(\"Error al intentar guardar el producto en el backend\");\n        console.log(error);\n      }\n\n    })\n\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}