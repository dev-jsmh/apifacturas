{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nlet ClientAddProductComponent = class ClientAddProductComponent {\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(route, clientService, productService) {\n    this.route = route;\n    this.clientService = clientService;\n    this.productService = productService;\n    this.clientId = '';\n    this.currentClient = new ClientEntity();\n    // list of products \n    this.productList = [];\n    // extract id from route\n    this.route.params.subscribe({\n      next: params => {\n        this.clientId = params['id'];\n      },\n      error: ex => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n    // make request to back-end for client\n    this.clientService.getById(this.clientId).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ex => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n    // make request for product list \n    this.productService.getAll().subscribe({\n      next: res => {\n        this.productList = res;\n        console.log(\"List of products: \");\n        console.log(this.productList);\n      },\n      error: ex => {\n        console.log(\"Error when trying to get products from back-end api\");\n        console.log(ex);\n      }\n    });\n  }\n};\nClientAddProductComponent = __decorate([Component({\n  selector: 'app-client-add-product',\n  templateUrl: './client-add-product.component.html',\n  styleUrls: ['./client-add-product.component.css']\n})], ClientAddProductComponent);\nexport { ClientAddProductComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,YAAY,QAAQ,6BAA6B;AAUnD,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EASpC;EACA;EACAC,YACUC,KAAqB,EACrBC,aAA4B,EAC5BC,cAA8B;IAF9B,UAAK,GAALF,KAAK;IACL,kBAAa,GAAbC,aAAa;IACb,mBAAc,GAAdC,cAAc;IAVjB,aAAQ,GAAG,EAAE;IACb,kBAAa,GAAiB,IAAIL,YAAY,EAAE;IACzD;IACS,gBAAW,GAAoB,EAAE;IAUtC;IACA,IAAI,CAACG,KAAK,CAACG,MAAM,CAACC,SAAS,CAAC;MAC1BC,IAAI,EAAGF,MAAM,IAAI;QACf,IAAI,CAACG,QAAQ,GAAGH,MAAM,CAAC,IAAI,CAAC;MAC9B,CAAC;MACDI,KAAK,EAAGC,EAAE,IAAI;QACZC,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;QAC5ED,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;KACD,CAAC;IAEF;IACA,IAAI,CAACP,aAAa,CAACU,OAAO,CAAC,IAAI,CAACL,QAAQ,CAAC,CAACF,SAAS,CAAC;MAClDC,IAAI,EAAGO,GAAQ,IAAI;QACjB;QACA,IAAI,CAACC,aAAa,GAAGD,GAAG;QACxBH,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;QACrCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,aAAa,CAAC;MACjC,CAAC;MACDN,KAAK,EAAIC,EAAE,IAAM;QACfC,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;QAC9DD,OAAO,CAACC,GAAG,CAACF,EAAE,CAAC;MACjB;KACD,CAAC;IAEF;IACJ,IAAI,CAACN,cAAc,CAACY,MAAM,EAAE,CAACV,SAAS,CAAC;MACrCC,IAAI,EAAIO,GAAQ,IAAK;QACnB,IAAI,CAACG,WAAW,GAAGH,GAAG;QACtBH,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACK,WAAW,CAAC;MAC/B,CAAC;MACDR,KAAK,EAAIC,EAAE,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,qDAAqD,CAAC;QAClED,OAAO,CAACC,GAAG,CAAEF,EAAE,CAAE;MACnB;KACD,CAAC;EAGA;CAGD;AA3DYV,yBAAyB,eALrCF,SAAS,CAAC;EACToB,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GACWpB,yBAAyB,CA2DrC;SA3DYA,yBAAyB","names":["Component","ClientEntity","ClientAddProductComponent","constructor","route","clientService","productService","params","subscribe","next","clientId","error","ex","console","log","getById","res","currentClient","getAll","productList","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/clients/client-add-product/client-add-product.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nimport { ClientService } from 'src/app/services/client.service';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-client-add-product',\n  templateUrl: './client-add-product.component.html',\n  styleUrls: ['./client-add-product.component.css']\n})\nexport class ClientAddProductComponent {\n\n\n\n  public clientId = '';\n  public currentClient: ClientEntity = new ClientEntity();\n// list of products \n  public productList: ProductEntity[] = [];\n\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(\n    private route: ActivatedRoute,\n    private clientService: ClientService,\n    private productService: ProductService\n  ) {\n\n    // extract id from route\n    this.route.params.subscribe({\n      next: (params) => {\n        this.clientId = params['id'];\n      },\n      error: (ex) => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n\n    // make request to back-end for client\n    this.clientService.getById(this.clientId).subscribe({\n      next: (res: any) => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ( ex  ) => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n\n    // make request for product list \nthis.productService.getAll().subscribe({\n  next: ( res: any ) => {\n    this.productList = res;\n    console.log(\"List of products: \");\n    console.log(this.productList);\n  },\n  error: ( ex ) => {\n    console.log(\"Error when trying to get products from back-end api\");\n    console.log( ex );\n  }\n});\n\n\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}