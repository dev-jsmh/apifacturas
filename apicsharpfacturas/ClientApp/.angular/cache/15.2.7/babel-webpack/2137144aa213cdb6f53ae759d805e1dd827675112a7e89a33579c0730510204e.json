{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\nlet ProductUpdateComponent = class ProductUpdateComponent {\n  // inject dependencies \n  constructor(fb, route) {\n    this.fb = fb;\n    this.route = route;\n    // product id form route\n    this.productId = '';\n    // current product\n    this.currentProduct = new ProductEntity();\n    // create form with client data \n    this.updateProductForm = this.fb.group({\n      \"name\": ['', Validators.required],\n      \"model\": ['', Validators.required],\n      \"price\": [0.00, Validators.required],\n      \"stock\": [0, Validators.required]\n    });\n  }\n  // method to handle form \n  onSubmit() {\n    console.log(this.updateProductForm.value);\n  }\n};\nProductUpdateComponent = __decorate([Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})], ProductUpdateComponent);\nexport { ProductUpdateComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,aAAa,QAAQ,8BAA8B;AAOrD,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAUjC;EACAC,YAAoBC,EAAe,EAAUC,KAAK;IAA9B,OAAE,GAAFD,EAAE;IAAuB,UAAK,GAALC,KAAK;IANlD;IACO,cAAS,GAAG,EAAE;IACvB;IACO,mBAAc,GAAkB,IAAIJ,aAAa,EAAE;IAStD;IACA,IAAI,CAACK,iBAAiB,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CACpC;MACE,MAAM,EAAE,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ,CAAC;MACjC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACQ,QAAQ,CAAC;MAClC,OAAO,EAAE,CAAC,IAAI,EAAER,UAAU,CAACQ,QAAQ,CAAC;MACpC,OAAO,EAAE,CAAC,CAAC,EAAER,UAAU,CAACQ,QAAQ;KACjC,CACF;EACH;EAEA;EAEAC,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,iBAAiB,CAACM,KAAK,CAAC;EAE3C;CAED;AAnCYV,sBAAsB,eALlCH,SAAS,CAAC;EACTc,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACWb,sBAAsB,CAmClC;SAnCYA,sBAAsB","names":["Component","Validators","ProductEntity","ProductUpdateComponent","constructor","fb","route","updateProductForm","group","required","onSubmit","console","log","value","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/products/product-update/product-update.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Navigation, Route, Router } from '@angular/router';\nimport { ProductEntity } from 'src/app/models/ProductEntity';\n\n@Component({\n  selector: 'app-product-update',\n  templateUrl: './product-update.component.html',\n  styleUrls: ['./product-update.component.css']\n})\nexport class ProductUpdateComponent {\n\n\n  updateProductForm: FormGroup;\n\n  // product id form route\n  public productId = '';\n// current product\npublic currentProduct: ProductEntity = new ProductEntity();\n\n  // inject dependencies \n  constructor(private fb: FormBuilder, private route) {\n\n\n\n\n\n    // create form with client data \n    this.updateProductForm = this.fb.group(\n      {\n        \"name\": ['', Validators.required],\n        \"model\": ['', Validators.required],\n        \"price\": [0.00, Validators.required],\n        \"stock\": [0, Validators.required]\n      }\n    );\n  }\n\n  // method to handle form \n\n  onSubmit() {\n    console.log(this.updateProductForm.value);\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}