{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nimport { BillDetailEntity } from 'src/app/models/BillDetailEntity';\nlet BillCreateComponent = class BillCreateComponent {\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(route, clientService, productService, dillService) {\n    this.route = route;\n    this.clientService = clientService;\n    this.productService = productService;\n    this.dillService = dillService;\n    this.clientId = '';\n    this.currentClient = new ClientEntity();\n    // list of products \n    this.productList = [];\n    // public list of detail \n    this.detailList = [];\n    // products to purchase\n    this.wantedProducts = [];\n    // data of bill\n    this.billSubTotal = 0;\n    this.billDiscount = 0;\n    this.billTotal = 0;\n    // extract id from route\n    this.route.params.subscribe({\n      next: params => {\n        this.clientId = params['id'];\n      },\n      error: ex => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n    // make request to back-end for client\n    this.clientService.getById(this.clientId).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ex => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n    // make request for product list \n    this.productService.getAll().subscribe({\n      next: res => {\n        this.productList = res;\n        console.log(\"List of products map to details: \");\n        console.log(this.detailList);\n        // this.detailList[0].ProductEntity?.id\n      },\n\n      error: ex => {\n        console.log(\"Error when trying to get products from back-end api\");\n        console.log(ex);\n      }\n    });\n  }\n  addToList(p) {\n    const detail = new BillDetailEntity();\n    // checke if product already exists\n    if (this.wantedProducts.includes(p)) {\n      console.log(\"product exist\");\n    } else {\n      // mapp the product to bill detail\n      detail.product = p;\n      detail.quantity = 1;\n      detail.unitValue = p.price;\n      if (p.price) {\n        detail.totalValue = detail.quantity * p.price;\n      }\n      this.wantedProducts.push(p);\n      this.detailList.push(detail);\n      console.log(\"adding detail to list.... \");\n    }\n    console.log(this.detailList);\n  }\n  calculateTotal() {\n    // calculate subtotal\n    for (let i = 0; this.detailList.length > i; i++) {\n      console.log(this.detailList[i]);\n      this.billSubTotal += this.detailList[i].totalValue;\n      /*\r\n            const t = this.detailList[i].totalValue;\r\n      \r\n            if (t != undefined) {\r\n              this.billSubTotal += t;\r\n            }*/\n    }\n  }\n};\n\nBillCreateComponent = __decorate([Component({\n  selector: 'app-bill-create',\n  templateUrl: './bill-create.component.html',\n  styleUrls: ['./bill-create.component.css']\n})], BillCreateComponent);\nexport { BillCreateComponent };","map":{"version":3,"mappings":"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","names":["Component","ClientEntity","BillDetailEntity","BillCreateComponent","constructor","route","clientService","productService","dillService","params","subscribe","next","clientId","error","ex","console","log","getById","res","currentClient","getAll","productList","detailList","addToList","p","detail","wantedProducts","includes","product","quantity","unitValue","price","totalValue","push","calculateTotal","i","length","billSubTotal","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["d:\\INFOC\\Escritorio\\apifacturas\\apicsharpfacturas\\ClientApp\\src\\app\\billing\\bill-create\\bill-create.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ClientEntity } from 'src/app/models/ClientEntity';\r\nimport { ProductEntity } from 'src/app/models/ProductEntity';\r\nimport { ClientService } from 'src/app/services/client.service';\r\nimport { ProductService } from 'src/app/services/product.service';\r\nimport { BillService } from 'src/app/services/bill.service';\r\nimport { BillDetailEntity } from 'src/app/models/BillDetailEntity';\r\n\r\n\r\n@Component({\r\n  selector: 'app-bill-create',\r\n  templateUrl: './bill-create.component.html',\r\n  styleUrls: ['./bill-create.component.css']\r\n})\r\nexport class BillCreateComponent {\r\n\r\n  public clientId = '';\r\n  public currentClient: ClientEntity = new ClientEntity();\r\n  // list of products \r\n  public productList: ProductEntity[] = [];\r\n  // public list of detail \r\n  public detailList: BillDetailEntity[] = []\r\n  // products to purchase\r\n  public wantedProducts: ProductEntity[] = [];\r\n\r\n  // data of bill\r\n  public billSubTotal: number = 0;\r\n  public billDiscount: number = 0;\r\n  public billTotal = 0;\r\n\r\n  // =============== constructor ===============\r\n  // inject dependencies within the constructor \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private clientService: ClientService,\r\n    private productService: ProductService,\r\n    private dillService: BillService\r\n  ) {\r\n\r\n    // extract id from route\r\n    this.route.params.subscribe({\r\n      next: (params) => {\r\n        this.clientId = params['id'];\r\n      },\r\n      error: (ex) => {\r\n        console.log(\"Error when trying to get the request client from back-end api\");\r\n        console.log(ex);\r\n      }\r\n    });\r\n\r\n    // make request to back-end for client\r\n    this.clientService.getById(this.clientId).subscribe({\r\n      next: (res: any) => {\r\n        // set response to the currentClient variable\r\n        this.currentClient = res;\r\n        console.log(\"detalles del cliente. \");\r\n        console.log(this.currentClient);\r\n      },\r\n      error: (ex: any) => {\r\n        console.log(\"Error al intentar obtener los datos del cliente\");\r\n        console.log(ex);\r\n      }\r\n    });\r\n\r\n    // make request for product list \r\n    this.productService.getAll().subscribe({\r\n      next: (res: any) => {\r\n        this.productList = res;\r\n        console.log(\"List of products map to details: \");\r\n\r\n        console.log(this.detailList);\r\n\r\n        // this.detailList[0].ProductEntity?.id\r\n\r\n      },\r\n      error: (ex: any) => {\r\n        console.log(\"Error when trying to get products from back-end api\");\r\n        console.log(ex);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  addToList(p: ProductEntity) {\r\n\r\n    const detail = new BillDetailEntity();\r\n\r\n    // checke if product already exists\r\n    if (this.wantedProducts.includes(p)) {\r\n      console.log(\"product exist\");\r\n    } else {\r\n\r\n      // mapp the product to bill detail\r\n      detail.product = p;\r\n      detail.quantity = 1;\r\n      detail.unitValue = p!.price;\r\n      if (p.price) {\r\n        detail.totalValue = detail.quantity * p.price;\r\n      }\r\n      this.wantedProducts.push(p);\r\n      this.detailList.push(detail);\r\n      console.log(\"adding detail to list.... \");\r\n\r\n    }\r\n    console.log(this.detailList);\r\n\r\n\r\n  }\r\n\r\n  calculateTotal() {\r\n    // calculate subtotal\r\n    for (let i = 0; this.detailList.length > i; i++) {\r\n\r\n\r\nconsole.log(this.detailList[i]);\r\n      this.billSubTotal += this.detailList[i].totalValue!;\r\n\r\n      /*\r\n            const t = this.detailList[i].totalValue;\r\n      \r\n            if (t != undefined) {\r\n              this.billSubTotal += t;\r\n            }*/\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}