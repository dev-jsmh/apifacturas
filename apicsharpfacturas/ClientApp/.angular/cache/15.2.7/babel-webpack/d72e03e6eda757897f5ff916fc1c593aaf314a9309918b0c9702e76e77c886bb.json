{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/client.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction ClientUpdateComponent_form_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function ClientUpdateComponent_form_6_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"label\", 6);\n    i0.ɵɵtext(3, \"Nombres\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 5)(6, \"label\", 6);\n    i0.ɵɵtext(7, \"Nombres\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 5)(10, \"label\", 6);\n    i0.ɵɵtext(11, \"Apellidos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"button\", 10);\n    i0.ɵɵtext(15, \" guardar \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"a\", 11);\n    i0.ɵɵtext(17, \"cancelar\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.updateClientForm);\n    i0.ɵɵadvance(4);\n    i0.ɵɵpropertyInterpolate(\"value\", ctx_r0.currentClient.id);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.updateClientForm.valid && !ctx_r0.updateClientForm.dirty);\n  }\n}\nexport class ClientUpdateComponent {\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(route, clientService, router, fb) {\n    this.route = route;\n    this.clientService = clientService;\n    this.router = router;\n    this.fb = fb;\n    // id of client\n    this.clientId = '';\n    // instance for the client\n    this.currentClient = new ClientEntity();\n    // \n    this.clientIsLoaded = false;\n    // extract id from route\n    this.route.params.subscribe({\n      next: params => {\n        this.clientId = params['id'];\n      },\n      error: ex => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n    // make request to back-end\n    this.clientService.getById(this.clientId).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"Detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ex => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n    // set data to form after 1sg\n    setTimeout(() => {\n      // =============== form ===============\n      this.updateClientForm = this.fb.group({\n        \"names\": [this.currentClient.names, Validators.required],\n        \"lastnames\": [this.currentClient.lastnames, Validators.required]\n      });\n      this.clientIsLoaded = true;\n    }, 100);\n  }\n  // =============== method to handle form ===============\n  onSubmit() {\n    // set data from the form to the currentClient variable \n    this.currentClient.names = this.updateClientForm.get('names')?.value;\n    this.currentClient.lastnames = this.updateClientForm.get('lastnames')?.value;\n    // ===============  make post request ================\n    this.clientService.update(this.clientId, this.currentClient).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        console.log(\"Client has been updated successfully \");\n        console.log(res);\n        this.router.navigateByUrl(\"/clients/\" + this.clientId + '/details');\n      },\n      error: ex => {\n        console.log(\"Error when trying to update client data: \");\n        console.log(ex);\n      }\n    });\n  }\n}\nClientUpdateComponent.ɵfac = function ClientUpdateComponent_Factory(t) {\n  return new (t || ClientUpdateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ClientService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.FormBuilder));\n};\nClientUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClientUpdateComponent,\n  selectors: [[\"app-client-update\"]],\n  decls: 7,\n  vars: 1,\n  consts: [[1, \"container-fluid\"], [\"routerLink\", \"../details\"], [1, \"container\"], [\"class\", \"col-md-6\", 3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"col-md-6\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"\"], [\"type\", \"text\", 1, \"form-control\", 3, \"value\"], [\"type\", \"text\", \"formControlName\", \"names\", 1, \"form-control\"], [\"type\", \"text\", \"formControlName\", \"lastnames\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\", \"mx-1\", 3, \"disabled\"], [\"routerLink\", \"../details\", 1, \"btn\", \"btn-primary\", \"mx-1\"]],\n  template: function ClientUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \" <- \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"h3\");\n      i0.ɵɵtext(4, \"Actualizar Datos del Cliente\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵtemplate(6, ClientUpdateComponent_form_6_Template, 18, 3, \"form\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.clientIsLoaded);\n    }\n  },\n  dependencies: [i4.NgIf, i1.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","ClientEntity","i0","ClientUpdateComponent","constructor","route","clientService","router","fb","params","subscribe","next","clientId","error","ex","console","log","getById","res","currentClient","setTimeout","updateClientForm","group","names","required","lastnames","clientIsLoaded","onSubmit","get","value","update","navigateByUrl","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\INFOC\\Escritorio\\apifacturas\\apicsharpfacturas\\ClientApp\\src\\app\\clients\\client-update\\client-update.component.ts","D:\\INFOC\\Escritorio\\apifacturas\\apicsharpfacturas\\ClientApp\\src\\app\\clients\\client-update\\client-update.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClientEntity } from 'src/app/models/ClientEntity';\r\nimport { ClientService } from 'src/app/services/client.service';\r\n\r\n@Component({\r\n  selector: 'app-client-update',\r\n  templateUrl: './client-update.component.html',\r\n  styleUrls: ['./client-update.component.css']\r\n})\r\nexport class ClientUpdateComponent {\r\n\r\n  // id of client\r\n  public clientId = '';\r\n  // instance for the client\r\n  public currentClient: ClientEntity = new ClientEntity();\r\n  // form \r\n  public updateClientForm: any;\r\n  // \r\n  public clientIsLoaded = false;\r\n\r\n  // =============== constructor ===============\r\n  // inject dependencies within the constructor \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private clientService: ClientService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {\r\n\r\n    // extract id from route\r\n    this.route.params.subscribe({\r\n      next: (params) => {\r\n        this.clientId = params['id'];\r\n      },\r\n      error: (ex) => {\r\n        console.log(\"Error when trying to get the request client from back-end api\");\r\n        console.log(ex);\r\n      }\r\n    });\r\n\r\n    // make request to back-end\r\n    this.clientService.getById(this.clientId).subscribe({\r\n      next: (res: any) => {\r\n        // set response to the currentClient variable\r\n        this.currentClient = res;\r\n\r\n        console.log(\"Detalles del cliente. \");\r\n        console.log(this.currentClient);\r\n      },\r\n      error: (ex) => {\r\n        console.log(\"Error al intentar obtener los datos del cliente\");\r\n        console.log(ex);\r\n      }\r\n    });\r\n\r\n    // set data to form after 1sg\r\n    setTimeout(() => {\r\n      // =============== form ===============\r\n      this.updateClientForm = this.fb.group({\r\n        \"names\": [this.currentClient.names, Validators.required],\r\n        \"lastnames\": [this.currentClient.lastnames, Validators.required],\r\n      });\r\n\r\n      this.clientIsLoaded = true;\r\n    }, 100);\r\n\r\n  }\r\n\r\n  // =============== method to handle form ===============\r\n  onSubmit() {\r\n    // set data from the form to the currentClient variable \r\n    this.currentClient.names = this.updateClientForm.get('names')?.value;\r\n    this.currentClient.lastnames = this.updateClientForm.get('lastnames')?.value;\r\n    // ===============  make post request ================\r\n    this.clientService.update(this.clientId, this.currentClient).subscribe({\r\n      next: (res: any) => {\r\n        // set response to the currentClient variable\r\n        console.log(\"Client has been updated successfully \");\r\n        console.log(res);\r\n        this.router.navigateByUrl(\"/clients/\" + this.clientId + '/details')\r\n      }, // print error message in console\r\n      error: (ex) => {\r\n        console.log(\"Error when trying to update client data: \");\r\n        console.log(ex);\r\n      }\r\n    });\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid\">\r\n    <a routerLink=\"../details\"> <- </a>\r\n            <h3>Actualizar Datos del Cliente</h3>\r\n</div>\r\n\r\n<div class=\"container\">\r\n    <form *ngIf=\"clientIsLoaded\" class=\"col-md-6\" [formGroup]=\"updateClientForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n        <div class=\"mb-3\">\r\n            <label for=\"\">Nombres</label>\r\n            <input class=\"form-control\" type=\"text\" value=\"{{ currentClient.id}}\">\r\n        </div>\r\n\r\n        <div class=\"mb-3\">\r\n            <label for=\"\">Nombres</label>\r\n            <input class=\"form-control\" type=\"text\" formControlName=\"names\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n            <label for=\"\">Apellidos</label>\r\n            <input class=\"form-control\" type=\"text\" formControlName=\"lastnames\">\r\n        </div>\r\n        <div class=\"mb-3\">\r\n           <button class=\"btn btn-secondary mx-1\" type=\"submit\" [disabled]=\"updateClientForm.valid && !updateClientForm.dirty\" >\r\n            guardar\r\n           </button>\r\n           <a class=\"btn btn-primary mx-1\" routerLink=\"../details\">cancelar</a>\r\n        </div>\r\n    </form>\r\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}