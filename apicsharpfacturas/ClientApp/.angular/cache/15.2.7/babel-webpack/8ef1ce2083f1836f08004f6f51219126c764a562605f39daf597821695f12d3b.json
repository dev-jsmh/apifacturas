{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nlet ClientUpdateComponent = class ClientUpdateComponent {\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(route, clientService, router, fb) {\n    this.route = route;\n    this.clientService = clientService;\n    this.router = router;\n    this.fb = fb;\n    // id of client\n    this.clientId = '';\n    // instance for the client\n    this.currentClient = new ClientEntity();\n    // \n    this.clientIsLoaded = false;\n    // extract id from route\n    this.route.params.subscribe({\n      next: params => {\n        this.clientId = params['id'];\n      },\n      error: ex => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n    // make request to back-end\n    this.clientService.getById(this.clientId).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n        console.log(\"Detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: ex => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n    // set data to form after 1sg\n    setTimeout(() => {\n      // =============== form ===============\n      this.updateClientForm = this.fb.group({\n        \"names\": [this.currentClient.names, Validators.required],\n        \"lastnames\": [this.currentClient.lastnames, Validators.required]\n      });\n      this.clientIsLoaded = true;\n    }, 100);\n  }\n  // =============== method to handle form ===============\n  onSubmit() {\n    // set data from the form to the currentClient variable \n    this.currentClient.names = this.updateClientForm.get('names')?.value;\n    this.currentClient.lastnames = this.updateClientForm.get('lastnames')?.value;\n    // ===============  make post request ===============\n    this.clientService.update(this.clientId, this.currentClient).subscribe({\n      next: res => {\n        // set response to the currentClient variable\n        console.log(\"Client has been updated successfully \");\n        console.log(res);\n        this.router.navigateByUrl(\"/clients/\" + this.clientId + 'details');\n      },\n      error: ex => {\n        console.log(\"Error when trying to update client data: \");\n        console.log(ex);\n      }\n    });\n  }\n};\nClientUpdateComponent = __decorate([Component({\n  selector: 'app-client-update',\n  templateUrl: './client-update.component.html',\n  styleUrls: ['./client-update.component.css']\n})], ClientUpdateComponent);\nexport { ClientUpdateComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","ClientEntity","ClientUpdateComponent","constructor","route","clientService","router","fb","params","subscribe","next","clientId","error","ex","console","log","getById","res","currentClient","setTimeout","updateClientForm","group","names","required","lastnames","clientIsLoaded","onSubmit","get","value","update","navigateByUrl","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/usuario/Projects/apicsharpfacturas/apicsharpfacturas/ClientApp/src/app/clients/client-update/client-update.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ClientEntity } from 'src/app/models/ClientEntity';\nimport { ClientService } from 'src/app/services/client.service';\n\n@Component({\n  selector: 'app-client-update',\n  templateUrl: './client-update.component.html',\n  styleUrls: ['./client-update.component.css']\n})\nexport class ClientUpdateComponent {\n\n  // id of client\n  public clientId = '';\n  // instance for the client\n  public currentClient: ClientEntity = new ClientEntity();\n  // form \n  public updateClientForm: any;\n  // \n  public clientIsLoaded = false;\n\n  // =============== constructor ===============\n  // inject dependencies within the constructor \n  constructor(\n    private route: ActivatedRoute,\n    private clientService: ClientService,\n    private router: Router,\n    private fb: FormBuilder\n  ) {\n\n    // extract id from route\n    this.route.params.subscribe({\n      next: (params) => {\n        this.clientId = params['id'];\n      },\n      error: (ex) => {\n        console.log(\"Error when trying to get the request client from back-end api\");\n        console.log(ex);\n      }\n    });\n\n    // make request to back-end\n    this.clientService.getById(this.clientId).subscribe({\n      next: (res: any) => {\n        // set response to the currentClient variable\n        this.currentClient = res;\n\n        console.log(\"Detalles del cliente. \");\n        console.log(this.currentClient);\n      },\n      error: (ex) => {\n        console.log(\"Error al intentar obtener los datos del cliente\");\n        console.log(ex);\n      }\n    });\n\n    // set data to form after 1sg\n    setTimeout(() => {\n      // =============== form ===============\n      this.updateClientForm = this.fb.group({\n        \"names\": [this.currentClient.names, Validators.required],\n        \"lastnames\": [this.currentClient.lastnames, Validators.required],\n      });\n\n      this.clientIsLoaded = true;\n    }, 100);\n\n  }\n\n  // =============== method to handle form ===============\n  onSubmit() {\n// set data from the form to the currentClient variable \nthis.currentClient.names = this.updateClientForm.get('names')?.value;\nthis.currentClient.lastnames = this.updateClientForm.get('lastnames')?.value;\n// ===============  make post request ===============\n    this.clientService.update(this.clientId, this.currentClient).subscribe({\n      next: (res: any) => {\n        // set response to the currentClient variable\n        console.log(\"Client has been updated successfully \");\n        console.log(res);\n        this.router.navigateByUrl(\"/clients/\" + this.clientId + 'details')\n      }, // print error message in console\n      error: (ex) => {\n        console.log(\"Error when trying to update client data: \");\n        console.log(ex);\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}