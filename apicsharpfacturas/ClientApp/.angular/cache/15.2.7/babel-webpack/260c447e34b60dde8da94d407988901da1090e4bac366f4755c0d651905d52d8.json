{"ast":null,"code":"import { apiUrl } from '../env';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClientService {\n  // inject dependencies\n  constructor(http) {\n    this.http = http;\n  }\n  // ============ get all  ==========\n  getAll() {\n    return this.http.get(apiUrl + '/Clients');\n  }\n  // ========== get by id  ==========\n  getById(id) {\n    return this.http.get(apiUrl + '/Clients/' + id);\n  }\n  // ========== post  ==========\n  post(newClient) {\n    return this.http.post(apiUrl + '/Clients', newClient);\n  }\n  // ========== post  ==========\n  update(id, clientMod) {\n    return this.http.put(apiUrl + '/Clients/' + id, clientMod);\n  }\n  // ========== delete  ==========\n  delete(id) {\n    this.http.delete(apiUrl + '/Clients/' + id);\n  }\n}\nClientService.ɵfac = function ClientService_Factory(t) {\n  return new (t || ClientService)(i0.ɵɵinject(i1.HttpClient));\n};\nClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ClientService,\n  factory: ClientService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,QAAQ;;;AAM/B,OAAM,MAAOC,aAAa;EAExB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExC;EACAC,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAACL,MAAM,GAAG,UAAU,CAAC;EAC3C;EAEA;EACAM,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAACL,MAAM,GAAG,WAAW,GAAGO,EAAE,CAAC;EACjD;EAEA;EACAC,IAAI,CAACC,SAAuB;IAC1B,OAAO,IAAI,CAACN,IAAI,CAACK,IAAI,CAACR,MAAM,GAAG,UAAU,EAAES,SAAS,CAAC;EACvD;EAEA;EACAC,MAAM,CAACH,EAAU,EAAEI,SAAuB;IACxC,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAACZ,MAAM,GAAG,WAAW,GAAGO,EAAE,EAAEI,SAAS,CAAC;EAC5D;EAEA;EACAE,MAAM,CAACN,EAAU;IACf,IAAI,CAACJ,IAAI,CAACU,MAAM,CAACb,MAAM,GAAG,WAAW,GAAGO,EAAE,CAAC;EAC7C;;AA5BWN,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAa,SAAbb,aAAa;EAAAc,YAFZ;AAAM","names":["apiUrl","ClientService","constructor","http","getAll","get","getById","id","post","newClient","update","clientMod","put","delete","factory","providedIn"],"sourceRoot":"","sources":["d:\\INFOC\\Escritorio\\apifacturas\\apicsharpfacturas\\ClientApp\\src\\app\\services\\client.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { apiUrl } from '../env';\r\nimport { ClientEntity } from '../models/ClientEntity';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientService {\r\n\r\n  // inject dependencies\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // ============ get all  ==========\r\n  getAll() {\r\n    return this.http.get(apiUrl + '/Clients');\r\n  }\r\n\r\n  // ========== get by id  ==========\r\n  getById(id: string) {\r\n    return this.http.get(apiUrl + '/Clients/' + id);\r\n  }\r\n\r\n  // ========== post  ==========\r\n  post(newClient: ClientEntity) {\r\n    return this.http.post(apiUrl + '/Clients', newClient);\r\n  }\r\n\r\n  // ========== post  ==========\r\n  update(id: string, clientMod: ClientEntity) {\r\n    return this.http.put(apiUrl + '/Clients/' + id, clientMod);\r\n  };\r\n\r\n  // ========== delete  ==========\r\n  delete(id: string) {\r\n    this.http.delete(apiUrl + '/Clients/' + id);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}